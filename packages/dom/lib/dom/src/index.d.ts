import { IDisposable } from '@fin/disposable';
export declare function addDisposableListener<K extends keyof GlobalEventHandlersEventMap>(node: Element | Window | Document, type: K, handler: (event: GlobalEventHandlersEventMap[K]) => void, useCapture?: boolean): IDisposable;
export declare function addDisposableListener(node: Element | Window | Document, type: string, handler: (event: any) => void, useCapture?: boolean): IDisposable;
export declare const EventType: {
    CLICK: string;
    DBLCLICK: string;
    MOUSE_UP: string;
    MOUSE_DOWN: string;
    MOUSE_OVER: string;
    MOUSE_MOVE: string;
    MOUSE_OUT: string;
    MOUSE_ENTER: string;
    MOUSE_LEAVE: string;
    CONTEXT_MENU: string;
    WHEEL: string;
    KEY_DOWN: string;
    KEY_PRESS: string;
    KEY_UP: string;
    LOAD: string;
    UNLOAD: string;
    ABORT: string;
    ERROR: string;
    RESIZE: string;
    SCROLL: string;
    SELECT: string;
    CHANGE: string;
    SUBMIT: string;
    RESET: string;
    FOCUS: string;
    FOCUS_IN: string;
    FOCUS_OUT: string;
    BLUR: string;
    INPUT: string;
    STORAGE: string;
    DRAG_START: string;
    DRAG: string;
    DRAG_ENTER: string;
    DRAG_LEAVE: string;
    DRAG_OVER: string;
    DROP: string;
    DRAG_END: string;
};
